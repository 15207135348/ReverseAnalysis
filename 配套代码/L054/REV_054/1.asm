; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28117.0 

	TITLE	C:\Users\libit\source\repos\REV_054\REV_054\REV_054.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG29945 DB	'Hello World!', 0aH, 00H
	ORG $+2
$SG29946 DB	'Hello World!', 0aH, 00H
	ORG $+2
$SG29947 DB	'Hello World!', 0aH, 00H
	ORG $+2
$SG29948 DB	'Hello World!', 0aH, 00H
	ORG $+2
$SG29949 DB	'Stepping=%d', 0aH, 00H
	ORG $+3
$SG29950 DB	'Model=%d', 0aH, 00H
	ORG $+2
$SG29951 DB	'Family=%d', 0aH, 00H
	ORG $+1
$SG29952 DB	'ProcessorType=%d', 0aH, 00H
	ORG $+2
$SG29953 DB	'Reserved1=%d', 0aH, 00H
	ORG $+2
$SG29954 DB	'ExtendedModel=%d', 0aH, 00H
	ORG $+2
$SG29955 DB	'ExtendedFamily=%d', 0aH, 00H
	ORG $+1
$SG29956 DB	'Reserved2=%d', 0aH, 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_b$ = -32						; size = 16
_temp3$ = -16						; size = 4
_temp2$ = -12						; size = 4
_temp1$ = -8						; size = 4
_temp$ = -4						; size = 4
_main	PROC
; File C:\Users\libit\source\repos\REV_054\REV_054\REV_054.cpp
; Line 20
	push	ebp
	mov	ebp, esp
	sub	esp, 32					; 00000020H
	push	ebx
	push	esi
; Line 21
	push	OFFSET $SG29945
	call	_printf
	add	esp, 4
; Line 24
	lea	esi, DWORD PTR _b$[ebp]
	mov	eax, 1
	xor	ecx, ecx
	cpuid
	mov	DWORD PTR [esi], eax
	mov	DWORD PTR [esi+4], ebx
	mov	DWORD PTR [esi+8], ecx
	mov	DWORD PTR [esi+12], edx
; Line 26
	lea	eax, DWORD PTR _b$[ebp]
	mov	DWORD PTR _temp$[ebp], eax
; Line 28
	push	OFFSET $SG29946
	call	_printf
	add	esp, 4
; Line 29
	lea	ecx, DWORD PTR _b$[ebp]
	mov	DWORD PTR _temp1$[ebp], ecx
; Line 31
	push	OFFSET $SG29947
	call	_printf
	add	esp, 4
; Line 32
	mov	edx, 4
	shl	edx, 0
	mov	eax, DWORD PTR _b$[ebp+edx]
	mov	DWORD PTR _temp2$[ebp], eax
; Line 34
	push	OFFSET $SG29948
	call	_printf
	add	esp, 4
; Line 35
	mov	ecx, 4
	shl	ecx, 0
	lea	edx, DWORD PTR _b$[ebp+ecx]
	mov	DWORD PTR _temp3$[ebp], edx
; Line 37
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	and	ecx, 15					; 0000000fH
	push	ecx
	push	OFFSET $SG29949
	call	_printf
	add	esp, 8
; Line 38
	mov	edx, DWORD PTR _temp$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 4
	and	eax, 15					; 0000000fH
	push	eax
	push	OFFSET $SG29950
	call	_printf
	add	esp, 8
; Line 39
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 8
	and	edx, 15					; 0000000fH
	push	edx
	push	OFFSET $SG29951
	call	_printf
	add	esp, 8
; Line 40
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 12					; 0000000cH
	and	ecx, 3
	push	ecx
	push	OFFSET $SG29952
	call	_printf
	add	esp, 8
; Line 41
	mov	edx, DWORD PTR _temp$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 14					; 0000000eH
	and	eax, 3
	push	eax
	push	OFFSET $SG29953
	call	_printf
	add	esp, 8
; Line 42
	mov	ecx, DWORD PTR _temp$[ebp]
	mov	edx, DWORD PTR [ecx]
	shr	edx, 16					; 00000010H
	and	edx, 15					; 0000000fH
	push	edx
	push	OFFSET $SG29954
	call	_printf
	add	esp, 8
; Line 43
	mov	eax, DWORD PTR _temp$[ebp]
	mov	ecx, DWORD PTR [eax]
	shr	ecx, 20					; 00000014H
	and	ecx, 255				; 000000ffH
	push	ecx
	push	OFFSET $SG29955
	call	_printf
	add	esp, 8
; Line 44
	mov	edx, DWORD PTR _temp$[ebp]
	mov	eax, DWORD PTR [edx]
	shr	eax, 28					; 0000001cH
	and	eax, 15					; 0000000fH
	push	eax
	push	OFFSET $SG29956
	call	_printf
	add	esp, 8
; Line 45
	xor	eax, eax
; Line 46
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 957
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 958
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 959
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 960
	mov	eax, DWORD PTR __Result$[ebp]
; Line 961
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
; Line 86
	push	ebp
	mov	ebp, esp
; Line 88
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
