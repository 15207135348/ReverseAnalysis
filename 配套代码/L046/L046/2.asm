; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28117.0 

include listing.inc

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG5109	DB	'Hello World!', 0aH, 00H
	ORG $+2
$SG5110	DB	'my_abs', 0aH, 00H
$SG5111	DB	'%f', 0aH, 00H
$SG5112	DB	'%f', 0aH, 00H
$SG5113	DB	'set_sign', 0aH, 00H
	ORG $+2
$SG5114	DB	'%f', 0aH, 00H
$SG5115	DB	'%f', 0aH, 00H
$SG5117	DB	'%f', 0aH, 00H
$SG5116	DB	'set_neg', 0aH, 00H
	ORG $+3
$SG5118	DB	'%f', 0aH, 00H
CONST	ENDS
PUBLIC	__local_stdio_printf_options
PUBLIC	_vfprintf_l
PUBLIC	printf
PUBLIC	?my_abs@@YAMM@Z					; my_abs
PUBLIC	?set_sign@@YAMM@Z				; set_sign
PUBLIC	?set_neg@@YAMM@Z				; set_neg
PUBLIC	main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	__real@42f6e979
PUBLIC	__real@c2f6e979
EXTRN	__acrt_iob_func:PROC
EXTRN	__stdio_common_vfprintf:PROC
EXTRN	_fltused:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$_vfprintf_l DD imagerel $LN3
	DD	imagerel $LN3+67
	DD	imagerel $unwind$_vfprintf_l
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$printf DD imagerel $LN3
	DD	imagerel $LN3+87
	DD	imagerel $unwind$printf
pdata	ENDS
pdata	SEGMENT
$pdata$?my_abs@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?my_abs@@YAMM@Z
$pdata$?set_sign@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?set_sign@@YAMM@Z
$pdata$?set_neg@@YAMM@Z DD imagerel $LN3
	DD	imagerel $LN3+31
	DD	imagerel $unwind$?set_neg@@YAMM@Z
$pdata$main DD	imagerel $LN3
	DD	imagerel $LN3+281
	DD	imagerel $unwind$main
pdata	ENDS
;	COMDAT __real@c2f6e979
CONST	SEGMENT
__real@c2f6e979 DD 0c2f6e979r			; -123.456
CONST	ENDS
;	COMDAT __real@42f6e979
CONST	SEGMENT
__real@42f6e979 DD 042f6e979r			; 123.456
CONST	ENDS
xdata	SEGMENT
$unwind$?my_abs@@YAMM@Z DD 010a01H
	DD	0220aH
$unwind$?set_sign@@YAMM@Z DD 010a01H
	DD	0220aH
$unwind$?set_neg@@YAMM@Z DD 010a01H
	DD	0220aH
$unwind$main DD	010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$printf DD 011801H
	DD	06218H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$_vfprintf_l DD 011801H
	DD	06218H
xdata	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
main	PROC
; File C:\Users\libit\source\repos\L046\L046\L046.cpp
; Line 26
$LN3:
	sub	rsp, 40					; 00000028H
; Line 27
	lea	rcx, OFFSET FLAT:$SG5109
	call	printf
; Line 28
	lea	rcx, OFFSET FLAT:$SG5110
	call	printf
; Line 29
	movss	xmm0, DWORD PTR __real@42f6e979
	call	?my_abs@@YAMM@Z				; my_abs
	cvtss2sd xmm0, xmm0
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:$SG5111
	call	printf
; Line 30
	movss	xmm0, DWORD PTR __real@c2f6e979
	call	?my_abs@@YAMM@Z				; my_abs
	cvtss2sd xmm0, xmm0
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:$SG5112
	call	printf
; Line 32
	lea	rcx, OFFSET FLAT:$SG5113
	call	printf
; Line 33
	movss	xmm0, DWORD PTR __real@42f6e979
	call	?set_sign@@YAMM@Z			; set_sign
	cvtss2sd xmm0, xmm0
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:$SG5114
	call	printf
; Line 34
	movss	xmm0, DWORD PTR __real@c2f6e979
	call	?set_sign@@YAMM@Z			; set_sign
	cvtss2sd xmm0, xmm0
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:$SG5115
	call	printf
; Line 36
	lea	rcx, OFFSET FLAT:$SG5116
	call	printf
; Line 37
	movss	xmm0, DWORD PTR __real@42f6e979
	call	?set_neg@@YAMM@Z			; set_neg
	cvtss2sd xmm0, xmm0
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:$SG5117
	call	printf
; Line 38
	movss	xmm0, DWORD PTR __real@c2f6e979
	call	?set_neg@@YAMM@Z			; set_neg
	cvtss2sd xmm0, xmm0
	movaps	xmm1, xmm0
	movq	rdx, xmm1
	lea	rcx, OFFSET FLAT:$SG5118
	call	printf
; Line 39
	xor	eax, eax
	add	rsp, 40					; 00000028H
	ret	0
main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
temp$ = 0
i$ = 32
?set_neg@@YAMM@Z PROC					; set_neg
; File C:\Users\libit\source\repos\L046\L046\L046.cpp
; Line 19
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 24
; Line 20
	mov	eax, DWORD PTR i$[rsp]
	btc	eax, 31
	mov	DWORD PTR temp$[rsp], eax
; Line 21
	movss	xmm0, DWORD PTR temp$[rsp]
; Line 22
	add	rsp, 24
	ret	0
?set_neg@@YAMM@Z ENDP					; set_neg
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
temp$ = 0
i$ = 32
?set_sign@@YAMM@Z PROC					; set_sign
; File C:\Users\libit\source\repos\L046\L046\L046.cpp
; Line 13
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 24
; Line 14
	mov	eax, DWORD PTR i$[rsp]
	bts	eax, 31
	mov	DWORD PTR temp$[rsp], eax
; Line 15
	movss	xmm0, DWORD PTR temp$[rsp]
; Line 16
	add	rsp, 24
	ret	0
?set_sign@@YAMM@Z ENDP					; set_sign
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
temp$ = 0
i$ = 32
?my_abs@@YAMM@Z PROC					; my_abs
; File C:\Users\libit\source\repos\L046\L046\L046.cpp
; Line 7
$LN3:
	movss	DWORD PTR [rsp+8], xmm0
	sub	rsp, 24
; Line 8
	mov	eax, DWORD PTR i$[rsp]
	btr	eax, 31
	mov	DWORD PTR temp$[rsp], eax
; Line 9
	movss	xmm0, DWORD PTR temp$[rsp]
; Line 10
	add	rsp, 24
	ret	0
?my_abs@@YAMM@Z ENDP					; my_abs
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT printf
_TEXT	SEGMENT
_Result$ = 32
_ArgList$ = 40
_Format$ = 64
printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 954
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+32], r9
	sub	rsp, 56					; 00000038H
; Line 957
	lea	rax, QWORD PTR _Format$[rsp+8]
	mov	QWORD PTR _ArgList$[rsp], rax
; Line 958
	mov	ecx, 1
	call	__acrt_iob_func
	mov	r9, QWORD PTR _ArgList$[rsp]
	xor	r8d, r8d
	mov	rdx, QWORD PTR _Format$[rsp]
	mov	rcx, rax
	call	_vfprintf_l
	mov	DWORD PTR _Result$[rsp], eax
; Line 959
	mov	QWORD PTR _ArgList$[rsp], 0
; Line 960
	mov	eax, DWORD PTR _Result$[rsp]
; Line 961
	add	rsp, 56					; 00000038H
	ret	0
printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _vfprintf_l
_TEXT	SEGMENT
_Stream$ = 64
_Format$ = 72
_Locale$ = 80
_ArgList$ = 88
_vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 642
$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	sub	rsp, 56					; 00000038H
; Line 643
	call	__local_stdio_printf_options
	mov	rcx, QWORD PTR _ArgList$[rsp]
	mov	QWORD PTR [rsp+32], rcx
	mov	r9, QWORD PTR _Locale$[rsp]
	mov	r8, QWORD PTR _Format$[rsp]
	mov	rdx, QWORD PTR _Stream$[rsp]
	mov	rcx, QWORD PTR [rax]
	call	__stdio_common_vfprintf
; Line 644
	add	rsp, 56					; 00000038H
	ret	0
_vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __local_stdio_printf_options
_TEXT	SEGMENT
__local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
; Line 88
	lea	rax, OFFSET FLAT:?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	ret	0
__local_stdio_printf_options ENDP
_TEXT	ENDS
END
