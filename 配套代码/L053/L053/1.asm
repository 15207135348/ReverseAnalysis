; Listing generated by Microsoft (R) Optimizing Compiler Version 19.24.28117.0 

	TITLE	C:\Users\libit\source\repos\L053\L053\L053.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB LIBCMT
INCLUDELIB OLDNAMES

CONST	SEGMENT
$SG5583	DB	'a=%d,b=%d,c.a=%d,c.b=%d,d=%d,e=%d', 00H
	ORG $+2
$SG5593	DB	'Hello World!', 0aH, 00H
CONST	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_printf
PUBLIC	?f@@YAXUou_s@@@Z				; f
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	___acrt_iob_func:PROC
EXTRN	___stdio_common_vfprintf:PROC
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_s$ = -36						; size = 20
$T1 = -16						; size = 4
tv71 = -12						; size = 4
$T2 = -8						; size = 4
_c$ = -4						; size = 4
_main	PROC
; File C:\Users\libit\source\repos\L053\L053\L053.cpp
; Line 28
	push	ebp
	mov	ebp, esp
	sub	esp, 36					; 00000024H
; Line 29
	push	OFFSET $SG5593
	call	_printf
	add	esp, 4
; Line 33
	push	8
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@main
	xor	eax, eax
	mov	ecx, DWORD PTR $T2[ebp]
	mov	DWORD PTR [ecx], eax
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR $T2[ebp]
	mov	DWORD PTR tv71[ebp], edx
	jmp	SHORT $LN4@main
$LN3@main:
	mov	DWORD PTR tv71[ebp], 0
$LN4@main:
	mov	eax, DWORD PTR tv71[ebp]
	mov	DWORD PTR _c$[ebp], eax
; Line 35
	mov	ecx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [ecx], 3
; Line 36
	mov	edx, DWORD PTR _c$[ebp]
	mov	DWORD PTR [edx+4], 4
; Line 38
	mov	BYTE PTR _s$[ebp], 1
; Line 39
	mov	DWORD PTR _s$[ebp+4], 2
; Line 43
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR _s$[ebp+8], eax
; Line 44
	mov	BYTE PTR _s$[ebp+12], 5
; Line 45
	mov	DWORD PTR _s$[ebp+16], 6
; Line 46
	sub	esp, 20					; 00000014H
	mov	ecx, esp
	mov	edx, DWORD PTR _s$[ebp]
	mov	DWORD PTR [ecx], edx
	mov	eax, DWORD PTR _s$[ebp+4]
	mov	DWORD PTR [ecx+4], eax
	mov	edx, DWORD PTR _s$[ebp+8]
	mov	DWORD PTR [ecx+8], edx
	mov	eax, DWORD PTR _s$[ebp+12]
	mov	DWORD PTR [ecx+12], eax
	mov	edx, DWORD PTR _s$[ebp+16]
	mov	DWORD PTR [ecx+16], edx
	call	?f@@YAXUou_s@@@Z			; f
	add	esp, 20					; 00000014H
; Line 47
	mov	eax, DWORD PTR _c$[ebp]
	mov	DWORD PTR $T1[ebp], eax
	push	8
	mov	ecx, DWORD PTR $T1[ebp]
	push	ecx
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
; Line 48
	xor	eax, eax
	mov	esp, ebp
	pop	ebp
	ret	0
_main	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
_TEXT	SEGMENT
_s$ = 8							; size = 20
?f@@YAXUou_s@@@Z PROC					; f
; File C:\Users\libit\source\repos\L053\L053\L053.cpp
; Line 22
	push	ebp
	mov	ebp, esp
; Line 23
	mov	eax, DWORD PTR _s$[ebp+16]
	push	eax
	movsx	ecx, BYTE PTR _s$[ebp+12]
	push	ecx
	mov	edx, DWORD PTR _s$[ebp+8]
	mov	eax, DWORD PTR [edx+4]
	push	eax
	mov	ecx, DWORD PTR _s$[ebp+8]
	mov	edx, DWORD PTR [ecx]
	push	edx
	mov	eax, DWORD PTR _s$[ebp+4]
	push	eax
	movsx	ecx, BYTE PTR _s$[ebp]
	push	ecx
	push	OFFSET $SG5583
	call	_printf
	add	esp, 28					; 0000001cH
; Line 25
	pop	ebp
	ret	0
?f@@YAXUou_s@@@Z ENDP					; f
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT _printf
_TEXT	SEGMENT
__Result$ = -8						; size = 4
__ArgList$ = -4						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 954
	push	ebp
	mov	ebp, esp
	sub	esp, 8
; Line 957
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax
; Line 958
	mov	ecx, DWORD PTR __ArgList$[ebp]
	push	ecx
	push	0
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	push	1
	call	___acrt_iob_func
	add	esp, 4
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax
; Line 959
	mov	DWORD PTR __ArgList$[ebp], 0
; Line 960
	mov	eax, DWORD PTR __Result$[ebp]
; Line 961
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\stdio.h
; Line 642
	push	ebp
	mov	ebp, esp
; Line 643
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	___stdio_common_vfprintf
	add	esp, 24					; 00000018H
; Line 644
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT
; File C:\Program Files (x86)\Windows Kits\10\include\10.0.17763.0\ucrt\corecrt_stdio_config.h
; Line 86
	push	ebp
	mov	ebp, esp
; Line 88
	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
; Line 89
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
